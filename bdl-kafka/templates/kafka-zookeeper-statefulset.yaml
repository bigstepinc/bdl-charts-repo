apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "bdl-kafka.zookeeper.fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: {{ template "bdl-kafka.chart" . }}
    component: "{{ .Release.Name }}-{{ .Values.Zookeeper.Component }}"
spec:
  serviceName: "{{ template "bdl-kafka.zookeeper.fullname" . }}"
  replicas: {{ .Values.Zookeeper.Replicas }}
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "{{ .Release.Name }}-{{ .Values.Zookeeper.Component }}"
  template:
    metadata:
      labels:
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        chart: {{ template "bdl-kafka.chart" . }}
        component: "{{ .Release.Name }}-{{ .Values.Zookeeper.Component }}"
    spec:
      containers:
      - name: "{{ template "bdl-kafka.zookeeper.fullname" . }}"
        image: "{{ .Values.Zookeeper.Image }}:{{ .Values.Zookeeper.ImageTag }}"
        imagePullPolicy: "{{ .Values.Zookeeper.ImagePullPolicy }}"
        command:
        - "/bin/bash"
        - "-c"
        - "$ZK_HOME/bin/zkGenConfig.sh && exec $ZK_HOME/bin/zkServer.sh start-foreground"
        terminationMessagePolicy: "File"
        terminationMessagePath: "/dev/termination-log"
        ports:
        - name: client
          containerPort: 2818
          protocol: TCP
        - name: election
          containerPort: 3888
          protocol: TCP
        - name: server
          containerPort: 2888
          protocol: TCP
        resources:
{{ toYaml .Values.Zookeeper.Resources | indent 10 }}
        env:
        - name: ZK_REPLICAS
          value: "{{ .Values.Zookeeper.Replicas }}"
        - name: JMXAUTH
          value: "{{ .Values.Zookeeper.Env.JMXAUTH }}"
        - name: JMXDISABLE
          value: "{{ .Values.Zookeeper.Env.JMXDISABLE }}"
        - name: JMXPORT
          value: "{{ .Values.Zookeeper.Env.JMXPORT }}"
        - name: JMXSSL
          value: "{{ .Values.Zookeeper.Env.JMXSSL }}"
        - name: ZK_CLIENT_PORT
          value: "2181"
        - name: ZK_ELECTION_PORT
          value: "3888"
        - name: ZK_HEAP_SIZE
          value: "{{ .Values.Zookeeper.Env.ZK_HEAP_SIZE }}"
        - name: ZK_INIT_LIMIT
          value: "{{ .Values.Zookeeper.Env.ZK_INIT_LIMIT }}"
        - name: ZK_LOG_LEVEL
          value: "{{ .Values.Zookeeper.Env.ZK_LOG_LEVEL }}"
        - name: ZK_MAX_CLIENT_CNXNS
          value: "{{ .Values.Zookeeper.Env.ZK_MAX_CLIENT_CNXNS }}"
        - name: ZK_MAX_SESSION_TIMEOUT
          value: "{{ .Values.Zookeeper.Env.ZK_MAX_SESSION_TIMEOUT }}"
        - name: ZK_MIN_SESSION_TIMEOUT
          value: "{{ .Values.Zookeeper.Env.ZK_MIN_SESSION_TIMEOUT }}"
        - name: ZK_PURGE_INTERVAL
          value: "{{ .Values.Zookeeper.Env.ZK_PURGE_INTERVAL }}"
        - name: ZK_SERVER_PORT
          value: "2888"
        - name: ZK_SNAP_RETAIN_COUNT
          value: "{{ .Values.Zookeeper.Env.ZK_SNAP_RETAIN_COUNT }}"
        - name: ZK_SYNC_LIMIT
          value: "{{ .Values.Zookeeper.Env.ZK_SYNC_LIMIT }}"
        - name: ZK_TICK_TIME
          value: "{{ .Values.Zookeeper.Env.ZK_TICK_TIME }}"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: data

