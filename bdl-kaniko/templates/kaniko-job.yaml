apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ template "bdl-kaniko.fullname" . }}"
  labels:
    heritage: {{ .Release.Service | quote }}
{{- if .Values.Labels }}
{{ toYaml .Values.Labels | indent 4 }}
{{- else }}
    release: {{ .Release.Name | quote }}
    chart: {{ template "bdl-kaniko.chart" . }}
    component: "{{ .Release.Name }}-{{ .Values.Component }}"
{{- end }}
spec:
  selector:
    matchLabels:
{{- if .Values.Labels }}
{{ toYaml .Values.Labels | indent 6 }}
{{- else }}
      component: "{{ .Release.Name }}-{{ .Values.Component }}"
{{- end }}
  template:
    metadata:
      labels:
        heritage: {{ .Release.Service | quote }}
{{- if .Values.Labels }}
{{ toYaml .Values.Labels | indent 8 }}
{{- else }}
        release: {{ .Release.Name | quote }}
        chart: {{ template "bdl-kaniko.chart" . }}
        component: "{{ .Release.Name }}-{{ .Values.Component }}"
{{- end }}
    spec:
      containers:
      - name: "{{ template "bdl-kaniko.fullname" . }}"
        image: "{{ .Values.kaniko.Image }}"
        imagePullPolicy: "{{ .Values.kaniko.ImagePullPolicy }}"
        resources:
{{ toYaml .Values.Resources | indent 10 }}
        args: [ "--build-arg", "PIP_PACKAGES={{ .Values.PipPackages }}",
                "--build-arg", "OS_PACKAGES={{ .Values.OsPackages }}",
                "--build-arg", "NOTEBOOK_NAME={{ .Values.Env.NotebookName }}",
                "--build-arg", "DATALAKE_ID={{ .Values.Env.DatalakeID }}",
                "--build-arg", "NOTEBOOK_VERSION={{ .Values.Env.NotebookVersion }}",
                "--build-arg", "API_KEY={{ .Values.Env.ApiKey }}",
                "--build-arg", "API_ENDPOINT={{ .Values.Env.ApiEndpoint }}",                
                "--dockerfile=Dockerfile",
                "--context=/context",
                "--destination={{ .Values.kaniko.Destination }}:{{ .Values.kaniko.Tag }}",
                "--single-snapshot" ]
        volumeMounts:
          - name: docker-config
            mountPath: /kaniko/.docker
          - name: context
            mountPath: /context
          - name: bash-config
            mountPath: /root/envs
      initContainers:
      - name: "{{ template "bdl-kaniko.fullname" . }}-sync"
        image: "{{ .Values.sync.Image }}"
        imagePullPolicy: "{{ .Values.sync.ImagePullPolicy }}"
        env:
          - name: SOURCE_REPO
            value: "{{ .Values.sync.Repository }}"
        volumeMounts:
          - name: context
            mountPath: /context
      restartPolicy: Never
      volumes:
        - name: docker-config
          projected:
            sources:
            - secret:
                name: "{{ template "bdl-kaniko.fullname" . }}-docker-config"
                items:
                - key: .dockerconfigjson
                  path: config.json
        - name: context
          emptyDir: {}
        - name: bash-config
          configMap:
            name: "{{ template "bdl-kaniko.fullname" . }}-bash"